Cuales serían nuestros primeros casos de prueba:
Necesitamos pensar en el caso de prueba más simple y continuar a partir del mismo  a pasos muy pequeños.
Por ejemplo, los siguientes casos de prueba:

TDD
- (1ª TDD) Toma en cuenta la cadena vacía: Para una cadena “” -> 0      OK.!!!
- (2ª TDD) Deberia tomar en cuenta cadena con 1 solo numero         OK.!!!
- (3ª TDD) Toma en cuenta cadena un solo número: Para una cadena “9” -> 9       OK.!!!
- (4ª TDD) Deberia tomar en cuenta cadena por defecto con 2 numeros     OK.!!!
- (5ª TDD) Toma en cuenta cadena con varios números: Para una cadena “1,3,6,18” -> 28       OK.!!!
- (6ª TDD) Calcular suma de una cadena con un delimitador por defecto OSEA calcular suma para cualquier cadena      OK.!!!
- (7ª TDD) Calcular suma de una cadena con un delimitador por defecto       OK.!!!
- (8ª TDD) Calcular suma de una cadena ignorando numeros que sean mayores a 1000 por defecto        OK.!!!
- (9ª TDD) Calcular suma de una cadena ignorando mayores numeros que sean mayores a 1000        OK.!!!
- (10ª TDD) Calcular suma de una cadena con un delimitador de cualquier longitud por defecto ok.!!!
- (11ª TDD) Calcular suma de una cadena con varios delimitadores de * de cualquier longitud ok.!!!

FUNCIONALIDADES
- Poner la funcion sumar_cadena en otra carpeta, verificando que tickee correctamente los anteriores testers        LISTO!!!
- Refactorizacion con JS v6 para mejor sintaxis, se crea en una clase toda la funcion sumar_cadena (añadiendo arrange y Assert-Verificacion, con su resultado)
- Mejoramos la refactorizacion anterior (tanto codigo de produccion como pruebas mejoramos) y usando una caracteristica de JEST (before each)